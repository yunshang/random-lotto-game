{"version":3,"sources":["components/RcRange.tsx","Lotto.tsx","My.tsx","bar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RcRange","props","RadioItem","redStyles","width","height","padding","textAlign","border","fontSize","marginLeft","backgroundColor","borderRadius","color","blueStyles","Lotto","title","useState","bolls","setBolls","game","setGame","1","36","rangeTipDefault","setRangeTipDefault","rangeDefault","rangeChange","values","valueObj","result","Object","assign","keys","map","k","handleClear","gameRandInit","key","min","max","boll","length","randomNumber","Number","Math","floor","random","includes","randomRange","newBolls","mode","icon","type","onLeftClick","console","log","renderHeader","value","label","i","checked","onChange","size","marks","style","marginTop","defaultValue","Header","extra","onClick","Body","index","text","Footer","content","inline","historyRecord","localStorage","getItem","records","JSON","parse","today","Date","date","getFullYear","getMonth","getDate","bollsJson","push","setItem","stringify","saveRecord","My","localData","initRecords","accordion","openAnimation","className","Panel","header","val","inx","Item","oInput","document","createElement","body","appendChild","select","execCommand","remove","success","handleClone","join","Bar","handleChangeBar","setState","selectedTab","state","position","top","unselectedTintColor","tintColor","barTintColor","tabBarPosition","selected","this","onPress","bind","selectedIcon","background","React","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.38071efd.chunk.js","sourcesContent":["import { Range } from \"antd-mobile\";\nimport React from \"react\";\n\nexport interface RcRangeProps {\n  value?: number[];\n  defaultValue?: number[];\n  count?: number;\n  min?: number;\n  max?: number;\n  allowCross?: boolean;\n  pushable?: boolean;\n  onChange?: (value: number[]) => void;\n  onBeforeChange?: (value: number[]) => void;\n  onAfterChange?: (value: number[]) => void;\n  reverse?: boolean;\n  vertical?: boolean;\n  marks?: Record<number, React.ReactNode>;\n  step?: number;\n  threshold?: number;\n  prefixCls?: string;\n  included?: boolean;\n  disabled?: boolean;\n  trackStyle?: React.CSSProperties;\n  handleStyle?: React.CSSProperties;\n  tabIndex?: number;\n  ariaLabelGroupForHandles?: string;\n  ariaLabelledByGroupForHandles?: string;\n  ariaValueTextFormatterGroupForHandles?: string;\n  style?: React.CSSProperties;\n  // handle: RcRangeSliderProps['handle'];\n}\n\nexport function RcRange(props: RcRangeProps) {\n  return <Range {...props as any}></Range>\n}","import React, { useState } from 'react';\nimport { NavBar, Icon, List, Radio, WingBlank, WhiteSpace, Card, Tag, Badge, Button } from 'antd-mobile'\nimport { RcRange } from './components/RcRange';\nimport CSS from 'csstype';\nconst RadioItem = Radio.RadioItem;\n\nexport interface Props {\n  title: string;\n}\n\nconst redStyles: CSS.Properties = {\n  width: '30px',\n  height: '30px',\n  padding: '4px 3px',\n  textAlign: 'center',\n  border: '1px solid #FF0000',\n  fontSize: '18px',\n  marginLeft: '5px',\n  backgroundColor: '#fff',\n  borderRadius: '50%',\n  color: 'black',\n};\n\nconst blueStyles: CSS.Properties = {\n  width: '30px',\n  height: '30px',\n  padding: '4px 3px',\n  textAlign: 'center',\n  border: '1px solid #0662ec',\n  fontSize: '18px',\n  backgroundColor: '#fff',\n  borderRadius: '50%',\n  color: 'black',\n  marginLeft: '5px',\n};\n\nfunction Lotto({title}: Props) {\n  const [bolls, setBolls] = useState<number[]>([]);\n  const [game, setGame] = useState<string>('双色球');\n  const marks: Record<number, string> = {\n    1: '1',\n    36: '36',\n  }\n  const [rangeTipDefault, setRangeTipDefault] = useState(marks);\n\n  const rangeInitValue: number[] = [1, 36]\n  const [rangeDefault, setRangeDefault] = useState(rangeInitValue);\n\n\n  const handleGotoSup = () => {\n    console.log(3434)\n  };\n\n  const rangeChange = (values:number[]) => {\n    const valueObj = {...values};\n    let result = Object.assign({}, ...Object.keys(valueObj).map((k: any)  => ({[valueObj[k]]: `${valueObj[k]}`})));\n    setRangeTipDefault(result)\n  };\n\n  const rangeRandomNum = () => {\n    return (\n      <RcRange marks={rangeTipDefault} min={1} max={36} style={{ marginTop: 20 }} defaultValue={rangeDefault} onChange={rangeChange} />\n    )\n  };\n  const onchangeType = (value: string) => {\n    setGame(value);\n  };\n  \n  const randomRange = (min: number, max: number, length: number) => {\n    // if (max  min) {\n    //     [min, max] = [min, max];\n    // };\n    let randomNumber:number = Number(Math.floor(Math.random() * max));\n    while(randomNumber < min || bolls.includes(randomNumber)) {\n      randomNumber = Math.floor(Math.random() * max);\n    }\n\n    return randomNumber;\n  }\n\n  const handleClear = () => {\n    setBolls([]);\n  }\n  type BollRecord = {\n    value: number[],\n    type: string,\n  }\n\n  type DateRecod = {\n    [key:string]: BollRecord[],\n  }\n\n  const saveRecord = () => {\n    const historyRecord = localStorage.getItem('bolls');\n    let records: DateRecod = {};\n    if (historyRecord !== null) {\n      records = JSON.parse(historyRecord);\n    }\n    const today = new Date();\n    const date = `${today.getFullYear()}-${today.getMonth()+1}-${today.getDate()}`\n    const bollsJson: BollRecord = {value: bolls, type: game}\n    if (!records[date]) records[date] = []\n    records[date].push(bollsJson)\n    localStorage.setItem('bolls', JSON.stringify(records))\n    handleClear()\n  }\n\n  const gameRandInit = (key: string) => {\n    const [min, max] = Object.keys(rangeTipDefault);\n    const boll = randomRange(Number(min), Number(max), 1);\n    const newBolls = [...bolls, boll];\n    setBolls(newBolls);\n  }\n\n  const gameType = [\n    {value: 'double', label: '双色球'},\n    {value: 'lotto', label: '大乐透'},\n  ]\n\n  return (\n    <div>\n      <NavBar mode=\"light\" icon={<Icon type=\"left\"/>} onLeftClick={handleGotoSup}>\n        {title}\n      </NavBar>\n      <List renderHeader={() => \"游戏类型\"}>\n        {gameType.map(i => (\n          <RadioItem key={i.label} checked={ game === i.label } onChange={() => onchangeType(i.label)}>\n            {i.label}\n          </RadioItem>\n        ))}\n      </List>\n      <List renderHeader={() => '随机区间'}>\n        <WingBlank size=\"lg\">\n          {rangeRandomNum()}\n        </WingBlank>\n      </List>\n      <WhiteSpace size=\"lg\" style={{ marginTop: 50 }}/>\n      <Card>\n        <Card.Header\n          title={game}\n          extra={<div><Button type=\"ghost\" size=\"small\" onClick={() => gameRandInit(game)}>刷新</Button></div>}\n        />\n        <Card.Body>\n          <div>\n            {bolls.map((boll, index) => (\n              <Badge text={`${boll}`} key={index} style={index > 5 ? blueStyles : redStyles}/>\n            ))}\n          </div>\n        </Card.Body>\n        <Card.Footer content={<Button type=\"warning\" style={{ marginTop: 10 }} size=\"small\" onClick={() => handleClear()}>清空</Button>} \n                      extra={<div style={{ marginTop: 10 }}><Button type=\"primary\" size=\"small\" inline onClick={() => saveRecord()}>保存</Button></div>} />\n      </Card>\n      <WhiteSpace size=\"lg\" />\n    </div>\n  );\n}\n\nexport default Lotto;","import React, { useState } from 'react';\nimport { NavBar, Icon, List, Accordion, Toast, Badge, Button } from 'antd-mobile'\n\nexport interface Props {\n  title: string;\n}\n\nfunction My({title}: Props) {\n  const handleGotoSup = () => {\n    console.log(3434)\n  };\n\n  type BollRecord = {\n    value: number[],\n    type: string,\n  }\n\n  type DateRecod = {\n    [key:string]: BollRecord[],\n  }\n\n  const localData =  localStorage.getItem('bolls')\n  const initRecords: DateRecod = (localData !== null ? JSON.parse(localData) : [])\n  const [records, setRecord] = useState(initRecords)\n\n  const handleClone = (value: string) => {\n    const oInput = document.createElement('input');\n    oInput.value = value;\n    document.body.appendChild(oInput);\n    oInput.select();\n    document.execCommand(\"Copy\");\n    oInput.remove();\n\n    Toast.success(`${value} 复制成功`, 1);\n  }\n\n  return (\n    <div>\n      <NavBar mode=\"light\" icon={<Icon type=\"left\"/>} onLeftClick={handleGotoSup}>\n        {title}\n      </NavBar>\n      <Accordion accordion openAnimation={{}} className=\"my-accordion\">\n        {Object.keys(records).map((key, index) => {\n          return (\n            <Accordion.Panel key={index} header={key}>\n              <List key={index}>\n                {records[key].map((val, inx) => {\n                  return (<List.Item key={inx} extra={<Button inline size=\"small\" style={{ marginTop: '10' }} onClick={() => handleClone(val.value.join(','))}>复制</Button>}>\n                    {val.value.join(',')}\n                      <Badge text={val.type} style={{ marginLeft: 12, padding: '0 3', backgroundColor: '#fff', borderRadius: 2, color: '#f19736', border: '1px solid #f19736', }} />\n                    </List.Item>)\n                })}\n              </List>\n            </Accordion.Panel>\n          )\n        })}\n      </Accordion>\n    </div>)\n}\n\nexport default My;","import * as React from 'react';\nimport { TabBar } from 'antd-mobile';\nimport Lotto from './Lotto';\nimport My from './My';\n\ninterface IProps {\n} \n\ninterface IState {\n  selectedTab?: string\n}\n\nclass Bar extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      selectedTab: 'A',\n    }\n  }\n\n  handleChangeBar = (key: string) => {\n    this.setState({\n      selectedTab: key\n    })\n  }\n\n  render() {\n    return(\n      <div style={{ position: 'fixed', height: '100%', width: '100%', top: 0 }}>\n        <TabBar unselectedTintColor=\"#949494\" tintColor=\"#33A3F4\" barTintColor=\"white\" tabBarPosition=\"bottom\">\n          <TabBar.Item title=\"game\" \n           key=\"game\"\n           selected={this.state.selectedTab === 'game'}\n           onPress={this.handleChangeBar.bind(this, 'game')}\n           selectedIcon={ \n             <div style={{ \n                width: '22px', \n                height: '22px',\n                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat' }}\n              />\n           }\n           icon={ \n             <div style={{ \n                width: '22px', \n                height: '22px',\n                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat' }}\n              />\n           }>\n            <Lotto title=\"game\"/>\n          </TabBar.Item>\n          <TabBar.Item title=\"history\" \n            key=\"C\"\n            selected={this.state.selectedTab === 'C'}\n            onPress={this.handleChangeBar.bind(this, 'C')}\n            selectedIcon={\n              <div style={{\n                width: '22px',\n                height: '22px',\n                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat' }}/>\n            }\n            icon={\n              <div style={{\n                width: '22px',\n                height: '22px',\n                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat' }}/>\n            }>\n            <My title=\"history\"/>\n          </TabBar.Item>\n        </TabBar>\n      </div>\n    )\n  }\n}\n\nexport default Bar\n\n","import React from 'react';\nimport Bar from './bar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Bar/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}